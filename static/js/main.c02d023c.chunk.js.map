{"version":3,"sources":["UserContext.js","Header.js","InfoContext.js","AnchorEarnConnect.js","Deposit.js","Withdraw.js","Home.js","App.js","index.js"],"names":["UserContext","createContext","Header","useContext","setValue","useState","wallet","setWallet","ext","Extension","className","onClick","undefined","connect","on","address","InfoContext","AnchorEarnConnect","value","info","setInfo","useEffect","fetchData","a","anchorEarn","balance","currencies","DENOMS","UST","balanceInfo","market","balances","account_balance","deposit","deposit_balance","height","liquidity","markets","APY","AnchorEarn","name","chain","CHAINS","TERRA","network","NETWORKS","TEQUILA_0004","Deposit","amount","setAmount","status","setStatus","txFee","onChange","e","target","onFocus","resetOnFocus","onBlur","resetOnBlur","depositData","currency","log","data","console","alert","mnemonic","Withdraw","setTxFee","resetInput","withdrawData","withdraw","Home","App","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c02d023c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\n","import React, {useState, useContext} from \"react\";\r\nimport { Extension } from '@terra-money/terra.js';\r\nimport { UserContext } from './UserContext'\r\n\r\nconst Header = () => {\r\n\r\n    const [value, setValue] = useContext(UserContext);\r\n\r\n    const [wallet, setWallet] = useState();\r\n    const ext = new Extension();\r\n\r\n    const connect = () => {\r\n        ext.connect();\r\n        ext.on(\"onConnect\", setWallet);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Anchor Gold</h1>\r\n            {/* <div>{value}</div> */}\r\n            \r\n                <button  onClick={wallet ? undefined : connect}>\r\n                    {!wallet && \"Connect Wallet\"}\r\n                    {wallet?.address}\r\n                    {setValue(wallet?.address)}   \r\n                </button>\r\n                \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header; \r\n\r\n","import { createContext } from 'react';\r\n\r\nexport const InfoContext = createContext(null);","import React, {useState, useEffect, useContext} from 'react'\r\nimport { AnchorEarn, CHAINS, NETWORKS, DENOMS } from '@anchor-protocol/anchor-earn';\r\nimport { UserContext } from './UserContext';\r\nimport { InfoContext } from './InfoContext';\r\n\r\nconst AnchorEarnConnect = () => {\r\n    const [value] = useContext(UserContext);\r\n    const [info, setInfo] = useContext(InfoContext);\r\n\r\n    useEffect(() => {\r\n        if(value != null){\r\n            const anchorEarn = new AnchorEarn({\r\n                name: \"testnet\",\r\n                chain: CHAINS.TERRA,\r\n                network: NETWORKS.TEQUILA_0004,\r\n                address: value\r\n            });\r\n\r\n            async function fetchData() {\r\n                const balanceInfo = await anchorEarn.balance({ currencies: [ DENOMS.UST ] });\r\n                const market = await anchorEarn.market({ currencies: [ DENOMS.UST ] });\r\n\r\n                // console.log(balanceInfo)\r\n                // console.log(market)\r\n                \r\n                setInfo({\r\n                    balance: balanceInfo.balances[0].account_balance,\r\n                    deposit: balanceInfo.balances[0].deposit_balance,\r\n                    height: balanceInfo.height,\r\n                    liquidity: market.markets[0].liquidity,\r\n                    APY: market.markets[0].APY\r\n                \r\n                })\r\n            }\r\n            \r\n            // async function fetchAUSTBalance() {\r\n            //     const aBalanceInfo = await anchorEarn.balance({ currencies: [ DENOMS.AUST ] });\r\n            //     console.log(aBalanceInfo)\r\n            // }\r\n            \r\n            fetchData(); \r\n            // fetchAUSTBalance();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h1>Balance: {info.balance}</h1>\r\n            <h1>Deposit: {info.deposit}</h1>\r\n            <h1>Height: {info.height}</h1>\r\n            <h1>Liquidity: {info.liquidity}</h1>\r\n            <h1>APY: {info.APY}</h1>\r\n            <h1>Interest Earned: {info.deposit - 19000}</h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AnchorEarnConnect;","import React, {useState, useEffect, useContext, Component} from 'react'\r\nimport {AnchorEarn, CHAINS, NETWORKS, DENOMS} from '@anchor-protocol/anchor-earn';\r\nimport { UserContext } from './UserContext'\r\n\r\n\r\nconst Deposit = () => {\r\n\r\n    \r\n\r\n    const [value] = useContext(UserContext);\r\n    const [amount, setAmount] = useState(\"0.00\")\r\n    const [status, setStatus] = useState(null)\r\n    const [txFee, setTxFee] = useState(null)\r\n    const [wallet_address, setWallet_address] = useState(null)\r\n    // const [deposit, setDeposit] = useState(null)\r\n    // const [mnemonic_phrase, setMnemonic_phrase] = useState(null)\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData () {\r\n    //         try {\r\n    //             const response = await fetch('http://anchor.gold/data/db.json')\r\n    //             const data = await response.json()\r\n    //             console.log(data)\r\n    //         } catch (error) {\r\n    //             console.log(\"ERROR\", error.message);\r\n    //         }\r\n            \r\n            \r\n    //     }\r\n    //     fetchData();\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     var config = {\r\n    //         headers: {'Access-Control-Allow-Origin': 'http://localhost:3000', \r\n    //         'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n    //         'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'\r\n    //     }\r\n        \r\n    //     }\r\n    //     axios.get('http://anchor.gold/data', config).then(res => {\r\n            \r\n    //         console.log(res.data)\r\n    //     })\r\n    // }, [])\r\n\r\n    const addDeposit = () => {\r\n\r\n        if(value != null){\r\n            const anchorEarn = new AnchorEarn({\r\n                chain: CHAINS.TERRA,\r\n                network: NETWORKS.TEQUILA_0004,\r\n                address: value,\r\n                mnemonic: 'road omit kangaroo region ketchup woman lawn dolphin drip erupt defense nurse orange timber write industry like boost regular intact ten artefact buyer sting'\r\n            });\r\n\r\n            async function depositData() {\r\n                try { \r\n                    const deposit = await anchorEarn.deposit({\r\n                        amount: amount, \r\n                        currency: DENOMS.UST,\r\n                        log: (data) => {\r\n                            console.log(\"THIS IS DATA\" + data)\r\n                        }\r\n                    });\r\n                    console.log(deposit)\r\n                    setStatus(deposit.status)\r\n                    setAmount(0.00)\r\n                \r\n                } catch (e) {\r\n                    alert(e)\r\n                } finally {\r\n                    console.log('Cleaned Up')\r\n                }\r\n            \r\n            }\r\n            depositData(); \r\n        }\r\n    }\r\n\r\n    const resetOnFocus = (e) => {\r\n        e.target.value = '';\r\n    }\r\n\r\n    const resetOnBlur = (e) => {\r\n        e.target.value = '0.00';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           \r\n            <input \r\n                value={amount} \r\n                onChange={e => setAmount(e.target.value)} \r\n                onFocus={(e) => resetOnFocus(e)}\r\n                onBlur={(e) => resetOnBlur(e)}\r\n                ></input>\r\n            \r\n            <button onClick={addDeposit} >\r\n                Deposit\r\n            </button>\r\n            <button>\r\n                AXIOS\r\n            </button>\r\n            <br />\r\n            <div>{\" Status: \" + status} {\"....\"} {\" Fee: \" + txFee}</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Deposit;\r\n\r\n// const users = require('../data/data.json')\r\n\r\n    // if(value === users.wallet_address){\r\n    //     console.log(\"FOUND WALLET \" + users.wallet_address)\r\n    // } else {\r\n    //     console.log(\"No Wallet\")\r\n    // }\r\n    \r\n    // const fs = require('fs')\r\n    // fs.readFile('../data/data.json', 'utf8', (err, jsonString) =>{\r\n    //     console.log(jsonString)\r\n    // })\r\n\r\n    // const checkJSON = () => {\r\n    //     userData.map((data, key) => {\r\n    //         if(key === value) {\r\n    //             console.log(data, key)\r\n    //         }\r\n    //          console.log(key)\r\n    //         return data\r\n    //     })\r\n    // }","import React, {useState, useContext} from 'react'\r\nimport {AnchorEarn, CHAINS, NETWORKS, DENOMS} from '@anchor-protocol/anchor-earn';\r\nimport { UserContext } from './UserContext'\r\n\r\nconst Withdraw = () => {\r\n\r\n    const [value] = useContext(UserContext);\r\n    const [amount, setAmount] = useState(\"0.00\")\r\n    const [status, setStatus] = useState(null)\r\n    const [txFee, setTxFee] = useState(null)\r\n\r\n    const withdrawFunds = () => {\r\n        \r\n        if(value != null){\r\n            const anchorEarn = new AnchorEarn({\r\n                chain: CHAINS.TERRA,\r\n                network: NETWORKS.TEQUILA_0004,\r\n                address: value,\r\n                mnemonic: 'road omit kangaroo region ketchup woman lawn dolphin drip erupt defense nurse orange timber write industry like boost regular intact ten artefact buyer sting'\r\n            });\r\n\r\n            async function withdrawData() {\r\n                try {\r\n                    const withdraw = await anchorEarn.withdraw({\r\n                        amount: amount, \r\n                        currency: DENOMS.UST,\r\n                        log: (data) => {\r\n                            console.log(\"THIS IS DATA\" + data)\r\n                        }\r\n                    });\r\n                    console.log(withdraw)\r\n                    setStatus(withdraw.status)\r\n                    setTxFee(withdraw.txFee)\r\n                } catch (e) {\r\n                    alert(e);\r\n                } finally {\r\n                    console.log('We do clean up')\r\n                }\r\n            }\r\n            withdrawData(); \r\n        }\r\n    }\r\n    const resetInput = (e) => {\r\n        e.target.value = '';\r\n    }\r\n\r\n    const resetOnBlur = (e) => {\r\n        e.target.value = '0.00';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                value={amount} \r\n                onChange={e => setAmount(e.target.value)} \r\n                onFocus={(e) => resetInput(e)} \r\n                onBlur={(e) => resetOnBlur(e)}></input>\r\n            \r\n            <button onClick={withdrawFunds}>\r\n                Withdraw  \r\n            </button>\r\n            <br />\r\n            <div>{\" Status: \" + status} {\"....\"} {\" Fee: \" + txFee}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Withdraw;\r\n\r\n","import React, {useContext} from 'react';\r\nimport './Home.css'\r\nimport AnchorEarnConnect from './AnchorEarnConnect'\r\nimport Deposit from './Deposit'\r\nimport Withdraw from './Withdraw'\r\n\r\nconst Home = () => {\r\n\r\n    // const [value] = useContext(UserContext);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Info:</h1>\r\n            <AnchorEarnConnect />\r\n            <Deposit />\r\n            <Withdraw />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from './Header';\nimport Home from './Home';\nimport { UserContext } from './UserContext';\nimport { InfoContext } from './InfoContext';\n\nfunction App() {\n\n    const [value, setValue] = useState(null);\n    const [info, setInfo] = useState([null]);\n\n    return (\n        <Router>\n        <div className=\"app\">\n            <UserContext.Provider value={[value, setValue]} >\n                <InfoContext.Provider value={[info, setInfo]} >\n                    <Route path=\"/\">\n                        <Header />\n                        <Home />\n                    </Route>\n                </InfoContext.Provider >\n            </UserContext.Provider>\n        </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}